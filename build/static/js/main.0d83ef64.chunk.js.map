{"version":3,"sources":["components/chat-input/send-button.svg","duck/types.js","duck/reducers.js","duck/actions.js","duck/index.js","components/chat-input/chat-input.component.js","components/chat-comment/chat-comment.component.js","components/chat-list/chat-list.component.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","id","points","className","fill","_ref","svgRef","title","props","x","y","width","height","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","INITIAL_STATE","comments","users","parseComments","data","map","user","posts","post","timestamp","Date","ts","timeAgo","toLocaleString","hour","minute","hour12","message","linkify","localComment","date","getTime","local","console","warn","value","regex","htmlStart","plainText","substr","html","split","t","replace","url","join","chatReducer","response","type","types","state","action","parsedData","push","ChatInputComponent","maxCharacterCount","placeholderText","inputValue","remainingCharacterCount","isInputInvalid","alert","isInputEmpty","sendComment","e","undefined","innerText","text","setState","keyCode","preventDefault","characterCountClasses","sendButtonClasses","contentEditable","data-text","onInput","onInputChanged","onKeyDown","textArea","onClick","sendButtonClicked","alt","count","trim","store","comment","sanitizeInput","dispatch","chatActions","postData","fetch","method","body","JSON","stringify","headers","React","Component","ChatCommentComponent","chatCommentClasses","thumbnailImage","real_name","username","dangerouslySetInnerHTML","__html","src","ChatListComponent","listEl","subscribe","getState","fetchChatRoom","listDomEl","ReactDOM","findDOMNode","scrollTop","scrollHeight","then","json","commentElements","CSSTransition","classNames","timeout","appear","TransitionGroup","component","createStore","App","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d83ef64.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"g\", {\n  id: \"send\"\n}, React.createElement(\"polygon\", {\n  points: \"0,497.25 535.5,267.75 0,38.25 0,216.75 382.5,267.75 0,318.75   \",\n  \"data-original\": \"#000000\",\n  className: \"active-path\",\n  \"data-old_color\": \"#000000\",\n  fill: \"#878181\"\n}))));\n\nvar SvgSendButton = function SvgSendButton(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"512px\",\n    height: \"512px\",\n    viewBox: \"0 0 535.5 535.5\",\n    style: {\n      enableBackground: \"new 0 0 535.5 535.5\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSendButton, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/send-button.1d927e46.svg\";\nexport { ForwardRef as ReactComponent };","// types.js\nconst FETCHED_CHATROOM = 'FETCHED_CHATROOM';\nconst SEND_COMMENT = 'SEND_COMMENT';\n\nexport default {\n  FETCHED_CHATROOM,\n  SEND_COMMENT,\n}","import types from './types'\n\nconst INITIAL_STATE = {\n  comments: [],\n  users: []\n}\n\nlet chatReducer = (state=INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.FETCHED_CHATROOM:\n      let parsedData = parseComments(action.response)\n      return {\n        comments: parsedData.posts,\n        users: parsedData.users\n      }\n    case types.SEND_COMMENT:\n      state.comments.push(localComment(action.message))\n      return state\n    default:\n      return state\n  }\n}\n\nfunction parseComments(data) {\n  let users = {}\n  if (!data || !data.users){ \n    return data\n  }\n\n  data.users.map((user) => users[user.id] = user)\n\n  data.posts.map((post) => {\n    let timestamp = new Date(post.ts * 1000)\n    post.user = users[post.user]\n    post.timeAgo = timestamp.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n    post.message = linkify(post.message)\n    return post\n  })\n\n  return data\n}\n\nfunction localComment(message) {\n  if (!message) { \n    console.warn('Creating a comment requires a message')\n    return\n  }\n\n  let date = new Date()\n\n  return {\n    id: date.getTime(),\n    user: -1,\n    local: true,\n    message: linkify(message),\n    timeAgo: date.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n  }\n}\n\nfunction linkify(value) {\n  if (!value) {\n    return value;\n  }\n  // If the text contains HTML, only linkify the text that precedes it\n  let regex = /((http(s?)(:\\/\\/))?(([w]{3}|(.*))\\.)?([a-zA-Z|0-9])+\\.(com(\\.au)?|org|me|net|ly|be|gl|co|it|info|(co(\\.))?uk|ca|nz|tv)(\\/[^\\s]+)*)+/g;\n  let htmlStart = value.indexOf('<');\n  let plainText = htmlStart > -1 ? value.substr(0, htmlStart) : value;\n  let html = htmlStart > -1 ? value.substr(htmlStart) : '';\n  // Replace URLs with links\n  let tokens = plainText.split(' ').map((t) => {\n    return t.replace(regex, function (url) {\n      let href = url.substr(0, 4) !== 'http' ? 'http://' + url : url;\n      return '<a href=\"' + href.replace(/(\"|').*$/g, '') + '\" target=\"_blank\" rel=\"nofollow noreferrer noopener\">' + url.replace(/(\"|').*$/g, '') + '</a>';\n    });\n  });\n  // Return the result\n  return tokens.join(' ') + html;\n}\n\nexport default chatReducer","// actions.js\nimport types from './types.js';\n\nconst fetchedChatroom = (response) => {\n  return {\n    type: types.FETCHED_CHATROOM,\n    response: response\n  }\n};\n\nconst sendComment = (message) => {\n  return {\n    type: types.SEND_COMMENT,\n    message: message,\n  }\n};\n\nexport default {\n  fetchedChatroom,\n  sendComment\n}","// index.js\nimport chatReducer from './reducers'\nexport { default as chatActions } from './actions'\nexport { default as homeTypes } from './types'\nexport default chatReducer;","import React from 'react';\nimport './chat-input.component.css';\nimport { ReactComponent as SendButtonSvg } from './send-button.svg';\nimport { chatActions } from '../../duck';\n\nexport class ChatInputComponent extends React.Component {\n  maxCharacterCount = 140\n  textArea\n  placeholderText = \"whats happening\"\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputValue: \"\",\n      remainingCharacterCount: this.maxCharacterCount\n    }\n  }\n\n  // Handlers\n\n  sendButtonClicked() {\n    if (this.isInputInvalid()) {\n      alert(\"The character limit is \" + this.maxCharacterCount + \". Please edit your message and try again.\")\n      return\n    }\n\n    if (this.isInputEmpty()) {\n      alert(\"The message is empty. Please add a message and try again.\")\n      return\n    }\n\n    this.sendComment()\n  }\n\n  onInputChanged(e) {\n    let target = e && e.target && e.target.innerText !== undefined ? e.target : undefined\n    if (target) {\n      let text = e.target.innerText === \"\" ? this.placeholderText : e.target.innerText\n\n      this.setState({\n        inputValue: text,\n        remainingCharacterCount: this.remainingCharacterCount(e.target.innerText.length)\n      })\n    }\n  }\n\n  onKeyDown(e) {\n    if (e.keyCode === 13) {\n      this.sendComment()\n      e.preventDefault()\n    }\n  }\n  \n  // Rendering\n\n  isInputInvalid() {\n    if (this.state.remainingCharacterCount < 0) {\n      return true\n    }\n  }\n\n  isInputEmpty() {\n    return this.state.inputValue.length === 0 || this.state.inputValue === this.placeholderText\n  }\n\n  render() {\n    let characterCountClasses = \"remaining-character-count font-theme\"\n    let sendButtonClasses = \"send-button-image\"\n    if (this.isInputInvalid()) {\n      characterCountClasses += \" error\"\n    } else if (!this.isInputEmpty()) {\n      sendButtonClasses += \" send-button-active\"\n    }\n\n    return (\n      <div className=\"chat-input\">\n        <span className={characterCountClasses}>{this.state.remainingCharacterCount}</span>\n        <div \n        contentEditable=\"true\"\n        data-text={this.placeholderText}\n        className=\"input font-theme\"\n        onInput={(e) => this.onInputChanged(e)}\n        onKeyDown={(e) => this.onKeyDown(e)}\n        ref={(ref) => this.textArea = ref}></div>\n        <button onClick={() => this.sendButtonClicked()} className=\"send-button font-theme\">\n          <SendButtonSvg alt=\"\" className={sendButtonClasses} width=\"25px\" height=\"25px\"/>\n        </button>\n      </div>\n    );\n  }\n\n  remainingCharacterCount(count) {\n    return count ? this.maxCharacterCount - count : this.maxCharacterCount\n  }\n\n  // Requests\n\n  sanitizeInput() {\n    return this.state.inputValue.replace(/<[^>]*>/g, ' ').replace(/\\s{2,}/g, ' ').trim()\n  }\n\n  sendComment() {\n    if (this.isInputInvalid()) {\n      return\n    }\n\n    if (!this.props.store) {\n      console.warn('ChatInputComponent is misconfigured, requires a store')\n      return\n    }\n\n    let comment = this.sanitizeInput()\n    \n    this.props.store.dispatch(chatActions.sendComment(comment))\n\n    //Make post request\n    let postData = {\n      comment: comment\n    }\n\n    fetch('http://localhost:3000/chat', {\n      method: 'POST',\n      body: JSON.stringify(postData),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    })\n\n    this.textArea.innerText = \"\"\n    this.setState({\n      inputValue: \"\",\n      remainingCharacterCount: this.maxCharacterCount\n    })\n  }\n}\n","import React from 'react';\nimport './chat-comment.component.css';\n\nexport class ChatCommentComponent extends React.Component {\n\n  render() {\n    if (!this.props.comment || !this.props.comment.user) {\n      return null;\n    }\n\n    let chatCommentClasses = \"chat-comment\"\n\n    if (this.props.comment.local) {\n      chatCommentClasses += \" own-comment\"\n    }\n\n    return (\n      <li>\n        <div className={chatCommentClasses}>\n          {this.thumbnailImage()}\n          <div className=\"chat-comment-message-wrapper\">\n            <div className=\"message-top\">\n              <div className=\"chat-comment-username font-theme truncate\">{this.props.comment.user.real_name} - @{this.props.comment.user.username}</div>\n              <div className=\"chat-comment-time font-theme\">{this.props.comment.timeAgo}</div>\n            </div>\n            <div className=\"message-bottom font-theme\">\n              <div className=\"message-frontside\" dangerouslySetInnerHTML={{ __html: this.props.comment.message }}></div>\n              <div className=\"message-backside\">\n                <img className=\"message-backside-icon\" alt=\"\" src=\"./assets/calendar-icon.svg\"/> \n                active since July 13, 2017\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n\n  thumbnailImage() {\n    if (!this.props.comment.local) {\n      return (\n        <div className=\"chat-comment-thumb-wrapper\">\n          <img alt=\"\" className=\"chat-comment-thumb\" src={\"./assets/\" + this.props.comment.user.username + \".jpg\"}/>\n        </div>)\n    } else {\n      return (\n      <div className=\"chat-comment-thumb-wrapper chat-local-thumb-wrapper\">  \n        <div className=\"chat-comment-thumb\">\n          <img alt=\"\" src=\"./assets/better-icon.svg\"/> \n        </div>\n      </div>)\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport {ChatCommentComponent} from '../chat-comment/chat-comment.component';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\nimport './chat-list.component.css';\nimport { chatActions } from '../../duck/index';\n\nexport class ChatListComponent extends React.Component {\n  listEl = null\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      comments: []\n    }\n  }\n\n  componentDidMount() {\n    this.props.store\n    .subscribe(() => {\n      if (!this.props.store) { \n        return \n      }\n\n      let state = this.props.store.getState()\n\n      this.setState({\n        comments: state.comments ? state.comments : []\n      })\n    })\n\n    this.fetchChatRoom()\n  }\n\n  componentDidUpdate() {\n    let listDomEl = ReactDOM.findDOMNode(this.listEl)\n    \n    if (listDomEl) {\n      listDomEl.scrollTop = listDomEl.scrollHeight\n    }\n  }\n\n  fetchChatRoom() {\n    fetch('http://localhost:3000/chatRoom')\n    .then(data => data.json())\n    .then((response) => {\n      if (!response || !response.posts) {\n        return\n      }\n      \n      this.props.store.dispatch(chatActions.fetchedChatroom(response))\n    })\n  }\n\n  render() {\n    if (this.state.comments.length === 0) {\n      return null\n    }\n    \n    const commentElements = this.state.comments.map((comment) => {\n      return (\n        <CSSTransition classNames=\"chat-comment\" key={comment.id} timeout={500} appear>\n          <ChatCommentComponent comment={comment}></ChatCommentComponent>\n        </CSSTransition>\n      )\n    })\n\n    return (\n      <TransitionGroup className=\"chat-list\" component=\"ul\" ref={(ref) => this.listEl = ref}>\n          {commentElements}\n      </TransitionGroup>\n    );\n  }\n}","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport { ChatInputComponent } from './components/chat-input/chat-input.component';\nimport { ChatListComponent } from './components/chat-list/chat-list.component';\nimport { createStore } from 'redux';\nimport chatReducer from './duck';\n\n// Store\nlet store = createStore(chatReducer)\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ChatListComponent store={store}></ChatListComponent>\n      <ChatInputComponent store={store}></ChatInputComponent>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}